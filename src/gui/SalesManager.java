/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import com.formdev.flatlaf.FlatIntelliJLaf;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import model.SalesModel;
import org.apache.log4j.Logger;

/**
 *
 * @author EZIO AUDITORY
 */
public class SalesManager extends javax.swing.JFrame {

    /**
     * Creates new form GrnManager
     */
    private SalesModel salesModel;
    private LoadCustomerDialog loadCustomerDialog;
    private LoadStockDialog loadStockDialog;
    static Logger logger = Logger.getLogger(SalesManager.class.getName());

    DefaultTableModel invoiceTableModel;
    DefaultTableModel invoiceHistoryTableModel;

    int customerNo;
    int selectedRow;

    public SalesManager() {
        initComponents();
        logger.debug("Access to InvoiceManager.java");

        invoiceTableModel = (DefaultTableModel) invoiceTable.getModel();
        invoiceHistoryTableModel = (DefaultTableModel) invoiceHistoryTable.getModel();

        salesModel = new SalesModel();
        loadCustomerDialog = new LoadCustomerDialog(this, rootPaneCheckingEnabled);
        loadStockDialog = new LoadStockDialog(this, rootPaneCheckingEnabled);

        invoiceNoLoad();
        loadInvoiceHistoryTable("");

        invoiceDateChooser.setDate(new java.util.Date());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        invoiceNoField = new javax.swing.JTextField();
        invoiceDateChooser = new com.toedter.calendar.JDateChooser();
        customerNameField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoiceTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        totalDiscountField = new javax.swing.JTextField();
        totalAmountField = new javax.swing.JTextField();
        netAmountField = new javax.swing.JTextField();
        totalTaxField = new javax.swing.JTextField();
        itemCountField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel6 = new javax.swing.JPanel();
        deleteRowButton = new javax.swing.JButton();
        saveInvoiceButton = new javax.swing.JButton();
        newGrnButton = new javax.swing.JButton();
        invoiceButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        productNoField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        productNameField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        qtyField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        unitNameField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        unitSellPriceField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        discountField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        taxField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        addRowButton = new javax.swing.JButton();
        updateRowButton = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        stockNoField = new javax.swing.JTextField();
        clearFiledsButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        keywordField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        invoiceHistoryTable = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        invoiceButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sales Manager");
        setResizable(false);

        invoiceNoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                invoiceNoFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invoiceNoFieldKeyReleased(evt);
            }
        });

        invoiceDateChooser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                invoiceDateChooserKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                invoiceDateChooserKeyReleased(evt);
            }
        });

        customerNameField.setText("Select Customer");
        customerNameField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerNameFieldMouseClicked(evt);
            }
        });
        customerNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customerNameFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customerNameFieldKeyReleased(evt);
            }
        });

        jLabel1.setText("Invoice No");

        jLabel2.setText("Customer");

        jLabel3.setText("Invoice Date");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(invoiceNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(invoiceDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(customerNameField))
                .addGap(654, 654, 654))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(invoiceNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(invoiceDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(customerNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addContainerGap())
        );

        invoiceTable.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        invoiceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sno", "Pno", "Product", "Qty", "Unit", "Unit Sell Price", "Discount", "Tax", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        invoiceTable.setDragEnabled(true);
        invoiceTable.setRowHeight(30);
        invoiceTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        invoiceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                invoiceTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(invoiceTable);
        if (invoiceTable.getColumnModel().getColumnCount() > 0) {
            invoiceTable.getColumnModel().getColumn(0).setMinWidth(60);
            invoiceTable.getColumnModel().getColumn(0).setMaxWidth(60);
            invoiceTable.getColumnModel().getColumn(1).setMinWidth(60);
            invoiceTable.getColumnModel().getColumn(1).setMaxWidth(60);
        }

        totalDiscountField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalDiscountField.setText("0.0");
        totalDiscountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalDiscountFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totalDiscountFieldKeyReleased(evt);
            }
        });

        totalAmountField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalAmountField.setText("0.0");
        totalAmountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalAmountFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totalAmountFieldKeyReleased(evt);
            }
        });

        netAmountField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        netAmountField.setText("0.0");
        netAmountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                netAmountFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                netAmountFieldKeyReleased(evt);
            }
        });

        totalTaxField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        totalTaxField.setText("0.0");
        totalTaxField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalTaxFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totalTaxFieldKeyReleased(evt);
            }
        });

        itemCountField.setText("0");
        itemCountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemCountFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemCountFieldKeyReleased(evt);
            }
        });

        jLabel4.setText("Item Count");

        jLabel5.setText("Discount");

        jLabel6.setText("Tax");

        jLabel7.setText("Total Amount");

        jLabel8.setText("Net Amount");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalDiscountField, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalAmountField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(netAmountField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(itemCountField))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(itemCountField, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(totalDiscountField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalTaxField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(netAmountField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deleteRowButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteRowButton.setText("Delete Row");
        deleteRowButton.setEnabled(false);
        deleteRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRowButtonActionPerformed(evt);
            }
        });

        saveInvoiceButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        saveInvoiceButton.setText("Save Invoice");
        saveInvoiceButton.setEnabled(false);
        saveInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveInvoiceButtonActionPerformed(evt);
            }
        });

        newGrnButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newGrnButton.setText("New");
        newGrnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newGrnButtonActionPerformed(evt);
            }
        });

        invoiceButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoiceButton.setText("Invoice");
        invoiceButton.setEnabled(false);
        invoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newGrnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(deleteRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(saveInvoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveInvoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newGrnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(invoiceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jLabel9.setText("Product No");

        productNoField.setText("0");
        productNoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productNoFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productNoFieldKeyReleased(evt);
            }
        });

        jLabel10.setText("Product");

        productNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productNameFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productNameFieldKeyReleased(evt);
            }
        });

        jLabel11.setText("Qty");

        qtyField.setText("0.0");
        qtyField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                qtyFieldFocusLost(evt);
            }
        });
        qtyField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                qtyFieldKeyReleased(evt);
            }
        });

        jLabel12.setText("Unit");

        unitNameField.setText("Number");
        unitNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unitNameFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                unitNameFieldKeyReleased(evt);
            }
        });

        jLabel13.setText("Unit Sell Price");

        unitSellPriceField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        unitSellPriceField.setText("0.0");
        unitSellPriceField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                unitSellPriceFieldFocusLost(evt);
            }
        });
        unitSellPriceField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                unitSellPriceFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                unitSellPriceFieldKeyReleased(evt);
            }
        });

        jLabel14.setText("Discount");

        discountField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        discountField.setText("0.0");
        discountField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                discountFieldFocusLost(evt);
            }
        });
        discountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountFieldKeyReleased(evt);
            }
        });

        jLabel15.setText("Tax");

        taxField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        taxField.setText("0.0");
        taxField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                taxFieldFocusLost(evt);
            }
        });
        taxField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                taxFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                taxFieldKeyReleased(evt);
            }
        });

        jLabel16.setText("Amount");

        amountField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        amountField.setText("0.0");
        amountField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountFieldKeyReleased(evt);
            }
        });

        addRowButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addRowButton.setText("Add Row");
        addRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowButtonActionPerformed(evt);
            }
        });

        updateRowButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateRowButton.setText("Update Row");
        updateRowButton.setEnabled(false);
        updateRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateRowButtonActionPerformed(evt);
            }
        });

        jLabel17.setText("Stock No");

        stockNoField.setText("Select Stock");
        stockNoField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockNoFieldMouseClicked(evt);
            }
        });
        stockNoField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stockNoFieldKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                stockNoFieldKeyReleased(evt);
            }
        });

        clearFiledsButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearFiledsButton.setText("Clear Fields");
        clearFiledsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFiledsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stockNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productNoField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(qtyField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unitNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(unitSellPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(addRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(updateRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearFiledsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(discountField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(taxField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountField, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(amountField)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(productNameField)
                    .addComponent(qtyField)
                    .addComponent(unitNameField)
                    .addComponent(unitSellPriceField)
                    .addComponent(discountField)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(taxField)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stockNoField)
                    .addComponent(productNoField)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearFiledsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Create Sale", jPanel1);

        keywordField.setForeground(new java.awt.Color(153, 153, 153));
        keywordField.setText("Search");
        keywordField.setToolTipText("Search");
        keywordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                keywordFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                keywordFieldFocusLost(evt);
            }
        });
        keywordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keywordFieldKeyReleased(evt);
            }
        });

        invoiceHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice No", "Invoice Date", "Customer", "Item Count", "Total Discount", "Total Tax", "Total Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        invoiceHistoryTable.setRowHeight(25);
        jScrollPane3.setViewportView(invoiceHistoryTable);
        if (invoiceHistoryTable.getColumnModel().getColumnCount() > 0) {
            invoiceHistoryTable.getColumnModel().getColumn(0).setMinWidth(100);
            invoiceHistoryTable.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        invoiceButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        invoiceButton1.setText("Invoice");
        invoiceButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1831, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(invoiceButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(keywordField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(invoiceButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Invoice History", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1860, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void customerNameFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerNameFieldMouseClicked
        // TODO add your handling code here:
        loadCustomerDialog.setVisible(true);

        Object[] customerData = loadCustomerDialog.getCustomerData();
        customerNo = (int) customerData[0];
        logger.debug("Select customer");
        customerNameField.setText((String) customerData[1]);
        logger.debug("Set selected customer data to text fields");
    }//GEN-LAST:event_customerNameFieldMouseClicked

    private void stockNoFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockNoFieldMouseClicked
        // TODO add your handling code here:
        loadStockDialog.setVisible(true);

        Object[] stockData = loadStockDialog.getStockData();

        String stockNoo = new String(stockData[0] + "");
        String productNoo = new String(stockData[1] + "");
        String productNameSet = (String) stockData[2];
        String availableQty = new String(stockData[3] + "");
        String productUnitName = (String) stockData[4];
        String stockUnitSellPrice = new String(stockData[5] + "");
        String productDiscount = new String(stockData[6] + "");
        String productTax = new String(stockData[7] + "");
        logger.debug("Select stock");
        stockNoField.setText(stockNoo);
        productNoField.setText(productNoo);
        productNameField.setText(productNameSet);
        qtyField.setText(availableQty);
        unitNameField.setText(productUnitName);
        unitSellPriceField.setText(stockUnitSellPrice);
        discountField.setText(productDiscount);
        taxField.setText(productTax);
        logger.debug("Set selected stock data to text fields");
        calculateValues();
    }//GEN-LAST:event_stockNoFieldMouseClicked

    private void addRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowButtonActionPerformed
        // TODO add your handling code here:
        logger.debug("Add row");
        String stockNo = stockNoField.getText();
        String productNo = productNoField.getText();
        String productName = productNameField.getText();
        String qty = qtyField.getText();
        String unitName = unitNameField.getText();
        String unitSellPrice = unitSellPriceField.getText();
        String discount = discountField.getText();
        String tax = taxField.getText();
        String amount = amountField.getText();

        double availableStockQty = salesModel.getAvailableStockQty(stockNo);

        String PATTERN = "^[0]{0,100}[.][0]{0,100}$";
        Pattern p = Pattern.compile(PATTERN);
        Matcher m1 = p.matcher(qty);
        Matcher m2 = p.matcher(unitSellPrice);

        logger.debug("Check validations");
        if (customerNo == 0 || customerNameField.equals("Select Customer")) {
            logger.error("Customer not selected");
            loadCustomerDialog.setVisible(true);
            Object[] customerData = loadCustomerDialog.getCustomerData();
            customerNo = (int) customerData[0];
            logger.debug("Select customer");
            customerNameField.setText((String) customerData[1]);
            logger.debug("Set selected customer data to text fields");
        } else if (stockNo.equals("Select Stock")) {
            logger.error("Stock not selected");
            loadStockDialog.setVisible(true);

            Object[] stockData = loadStockDialog.getStockData();

            String stockNoo = new String(stockData[0] + "");
            String productNoo = new String(stockData[1] + "");
            String productNameSet = (String) stockData[2];
            String availableQty = new String(stockData[3] + "");
            String productUnitName = (String) stockData[4];
            String stockUnitSellPrice = new String(stockData[5] + "");
            String productDiscount = new String(stockData[6] + "");
            String productTax = new String(stockData[7] + "");
            logger.debug("Select stock");
            stockNoField.setText(stockNoo);
            productNoField.setText(productNoo);
            productNameField.setText(productNameSet);
            qtyField.setText(availableQty);
            unitNameField.setText(productUnitName);
            unitSellPriceField.setText(stockUnitSellPrice);
            discountField.setText(productDiscount);
            taxField.setText(productTax);
            logger.debug("Set selected stock data to text fields");

        } else if (m1.matches()) {
            qtyField.requestFocus(true);
            logger.error("qty not entered");
        } else if (m2.matches()) {
            unitSellPriceField.requestFocus(true);
            logger.error("unit sell price not entered");
        } else if (Double.parseDouble(qty) > availableStockQty) {
            //JOptionPane.showConfirmDialog(rootPane, String.valueOf(availableStockQty) + " of quantity available only", "Warning", -1, 1);
            //qtyField.setText(String.valueOf(availableStockQty));
        } else {
            invoiceTableModel.addRow(new Object[]{Integer.parseInt(stockNo), Integer.parseInt(productNo), productName, Double.parseDouble(qty), unitName,
                Double.parseDouble(unitSellPrice), Double.parseDouble(discount), Double.parseDouble(tax), Double.parseDouble(amount)});
            logger.debug("Add row successful");
            saveInvoiceButton.setEnabled(true);
            itemCountField.setText(String.valueOf(invoiceTableModel.getRowCount()));
            calculateValues();
            clearFields();
        }
        calculateValues();
    }//GEN-LAST:event_addRowButtonActionPerformed

    private void updateRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateRowButtonActionPerformed
        // TODO add your handling code here:
        logger.debug("Update selected row");
        String stockNo = stockNoField.getText();
        String productNo = productNoField.getText();
        String productName = productNameField.getText();
        String qty = qtyField.getText();
        String unitName = unitNameField.getText();
        String unitSellPrice = unitSellPriceField.getText();
        String discount = discountField.getText();
        String tax = taxField.getText();
        String amount = amountField.getText();
        
        double availableStockQty = salesModel.getAvailableStockQty(stockNo);

        String PATTERN = "^[0]{0,100}[.][0]{0,100}$";
        Pattern p = Pattern.compile(PATTERN);
        Matcher m1 = p.matcher(qty);
        Matcher m2 = p.matcher(unitSellPrice);

        logger.debug("Check validations");
        if (m1.matches()) {
            qtyField.requestFocus(true);
            logger.error("qty not entered");
        } else if (m2.matches()) {
            unitSellPriceField.requestFocus(true);
            logger.error("unit sell price not entered");
        } else if (Double.parseDouble(qty) > availableStockQty) {
            //JOptionPane.showConfirmDialog(rootPane, String.valueOf(availableStockQty) + " of quantity available only", "Warning", -1, 1);
            //qtyField.setText(String.valueOf(availableStockQty));
        } else {
            Object[] addrow = new Object[]{Integer.parseInt(stockNo), Integer.parseInt(productNo), productName, Double.parseDouble(qty), unitName,
                Double.parseDouble(unitSellPrice), Double.parseDouble(discount), Double.parseDouble(tax), Double.parseDouble(amount)};

            invoiceTableModel.setValueAt(addrow[0], selectedRow, 0);
            invoiceTableModel.setValueAt(addrow[1], selectedRow, 1);
            invoiceTableModel.setValueAt(addrow[2], selectedRow, 2);
            invoiceTableModel.setValueAt(addrow[3], selectedRow, 3);
            invoiceTableModel.setValueAt(addrow[4], selectedRow, 4);
            invoiceTableModel.setValueAt(addrow[5], selectedRow, 5);
            invoiceTableModel.setValueAt(addrow[6], selectedRow, 6);
            invoiceTableModel.setValueAt(addrow[7], selectedRow, 7);
            invoiceTableModel.setValueAt(addrow[8], selectedRow, 8);
            logger.debug("Update selected row successful");
            saveInvoiceButton.setEnabled(true);
            itemCountField.setText(String.valueOf(invoiceTableModel.getRowCount()));
            calculateValues();
            clearFields();
        }
        calculateValues();
    }//GEN-LAST:event_updateRowButtonActionPerformed

    private void deleteRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRowButtonActionPerformed
        // TODO add your handling code here:
        logger.debug("Delete selected row");
        int rowCount = invoiceTable.getRowCount();
        int selectedRow = invoiceTable.getSelectedRow();
        int selectedRowCount = invoiceTable.getSelectedRowCount();

        if (selectedRowCount == 1) {
            invoiceTableModel.removeRow(selectedRow);
            logger.debug("Delete selected row successful");
            clearFields();
            if (rowCount == 1) {
                saveInvoiceButton.setEnabled(false);
            }
        } else {
            JOptionPane.showConfirmDialog(rootPane, "Please Select Any Single Row !", "Error", -1, JOptionPane.ERROR_MESSAGE);
            logger.error("Error: Please Select Any Single Row !");
        }
        calculateValues();
    }//GEN-LAST:event_deleteRowButtonActionPerformed

    private void saveInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveInvoiceButtonActionPerformed
        // TODO add your handling code here:
        calculateValues();
        int rowCount = invoiceTableModel.getRowCount();

        String invoiceNo = invoiceNoField.getText();
        Date invoiceDate = invoiceDateChooser.getDate();
        //customerNo in hear
        String itemCount = itemCountField.getText();
        String totalDiscount = totalDiscountField.getText();
        String totalTax = totalTaxField.getText();
        String totalAmount = totalAmountField.getText();

        logger.debug("Save invoice");
        String invoiceResult = salesModel.saveInvoice(invoiceNo, invoiceDate, customerNo, itemCount, totalDiscount, totalTax, totalAmount);

        String salesResult = null;
        String stockResult = "Save Successful";
        for (int i = 0; i < rowCount; i++) {
            int stockNo = (int) invoiceTableModel.getValueAt(i, 0);
            int productNo = (int) invoiceTableModel.getValueAt(i, 1);
            double qty = (double) invoiceTableModel.getValueAt(i, 3);
            double unitSellPrice = (double) invoiceTableModel.getValueAt(i, 5);
            double discount = (double) invoiceTableModel.getValueAt(i, 6);
            double tax = (double) invoiceTableModel.getValueAt(i, 7);
            double amount = (double) invoiceTableModel.getValueAt(i, 8);

            logger.debug("Save sales");
            salesResult = salesModel.saveSales(productNo, qty, unitSellPrice, discount, tax, amount, invoiceNo);
            logger.debug("Update stock");
            stockResult = salesModel.updateStock(stockNo, qty, invoiceDate);
        }

        if (invoiceResult.equals("Save Successful") && salesResult.equals("Save Successful") && stockResult.equals("Save Successful")) {
            JOptionPane.showConfirmDialog(rootPane, "Save Successful", "Message", -1, 1);
            invoiceButton.setEnabled(true);
            clearFields();
            addRowButton.setEnabled(false);
            updateRowButton.setEnabled(false);
            clearFiledsButton.setEnabled(false);
            invoiceTable.setEnabled(false);
            invoiceTable.clearSelection();
            deleteRowButton.setEnabled(false);
            saveInvoiceButton.setEnabled(false);
            loadInvoiceHistoryTable("");
            loadStockDialog.loadStockTable("");
            logger.debug("Message: Save Successful");
        } else {
            JOptionPane.showConfirmDialog(rootPane, "Save Error !", "Error", -1, JOptionPane.ERROR_MESSAGE);
            logger.error("Error: Save Error !");
        }
    }//GEN-LAST:event_saveInvoiceButtonActionPerformed

    private void invoiceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_invoiceTableMouseClicked
        // TODO add your handling code here:
        selectedRow = invoiceTable.getSelectedRow();
        try {
            stockNoField.setText(new String(invoiceTableModel.getValueAt(selectedRow, 0) + ""));
            productNoField.setText(new String(invoiceTableModel.getValueAt(selectedRow, 1) + ""));
            productNameField.setText((String) invoiceTableModel.getValueAt(selectedRow, 2));
            qtyField.setText(new String(invoiceTableModel.getValueAt(selectedRow, 3) + ""));
            unitNameField.setText((String) invoiceTableModel.getValueAt(selectedRow, 4));
            unitSellPriceField.setText(new String(invoiceTableModel.getValueAt(selectedRow, 5) + ""));
            discountField.setText(new String(invoiceTableModel.getValueAt(selectedRow, 6) + ""));
            taxField.setText(new String(invoiceTableModel.getValueAt(selectedRow, 7) + ""));
            amountField.setText(new String(invoiceTableModel.getValueAt(selectedRow, 8) + ""));
            logger.debug("Load selected row data to relevant text fields");

            addRowButton.setEnabled(false);
            updateRowButton.setEnabled(true);
            deleteRowButton.setEnabled(true);
        } catch (ArrayIndexOutOfBoundsException e) {
            e.printStackTrace();
            logger.error("Exception: " + e.getMessage());
        }

    }//GEN-LAST:event_invoiceTableMouseClicked

    private void clearFiledsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFiledsButtonActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_clearFiledsButtonActionPerformed

    private void newGrnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newGrnButtonActionPerformed
        // TODO add your handling code here:
        int rowCount = invoiceTableModel.getRowCount();

        invoiceNoLoad();
        customerNo = 0;
        customerNameField.setText("");
        invoiceDateChooser.setDate(new java.util.Date());

        clearFields();
        clearFiledsButton.setEnabled(true);

        for (int i = rowCount - 1; i >= 0; i--) {
            invoiceTableModel.removeRow(i);
        }

        invoiceTable.setEnabled(true);
        saveInvoiceButton.setEnabled(false);
        invoiceButton.setEnabled(false);

        itemCountField.setText("0");
        totalDiscountField.setText("0.0");
        totalTaxField.setText("0.0");
        totalAmountField.setText("0.0");
        netAmountField.setText("0.0");

        logger.debug("Open new invoice");
    }//GEN-LAST:event_newGrnButtonActionPerformed

    private void invoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceButtonActionPerformed
        // TODO add your handling code here:
        int invoiceNo = Integer.parseInt(invoiceNoField.getText());
        new GenerateInvoiceDialog(this, true, invoiceNo).setVisible(true);
    }//GEN-LAST:event_invoiceButtonActionPerformed

    private void invoiceNoFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceNoFieldKeyPressed
        // TODO add your handling code here:
        invoiceNoField.setEditable(false);
    }//GEN-LAST:event_invoiceNoFieldKeyPressed

    private void invoiceDateChooserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceDateChooserKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceDateChooserKeyPressed

    private void customerNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameFieldKeyPressed
        // TODO add your handling code here:
        customerNameField.setEditable(false);
    }//GEN-LAST:event_customerNameFieldKeyPressed

    private void stockNoFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockNoFieldKeyPressed
        // TODO add your handling code here:
        stockNoField.setEditable(false);
    }//GEN-LAST:event_stockNoFieldKeyPressed

    private void productNoFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNoFieldKeyPressed
        // TODO add your handling code here:
        productNoField.setEditable(false);
    }//GEN-LAST:event_productNoFieldKeyPressed

    private void productNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNameFieldKeyPressed
        // TODO add your handling code here:
        productNameField.setEditable(false);
    }//GEN-LAST:event_productNameFieldKeyPressed

    private void qtyFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyFieldKeyPressed
        // TODO add your handling code here:
        String qty = qtyField.getText();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == '.') {
            qtyField.setEditable(true);
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                qtyField.setEditable(true);
            } else {
                qtyField.setEditable(false);
            }
        }
    }//GEN-LAST:event_qtyFieldKeyPressed

    private void unitNameFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unitNameFieldKeyPressed
        // TODO add your handling code here:
        unitNameField.setEditable(false);
    }//GEN-LAST:event_unitNameFieldKeyPressed

    private void unitSellPriceFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unitSellPriceFieldKeyPressed
        // TODO add your handling code here:
        String unitSellPrice = unitSellPriceField.getText();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == '.') {
            unitSellPriceField.setEditable(true);
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                unitSellPriceField.setEditable(true);
            } else {
                unitSellPriceField.setEditable(false);
            }
        }
    }//GEN-LAST:event_unitSellPriceFieldKeyPressed

    private void discountFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountFieldKeyPressed
        // TODO add your handling code here:
        String discount = discountField.getText();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == '.') {
            discountField.setEditable(true);
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                discountField.setEditable(true);
            } else {
                discountField.setEditable(false);
            }
        }
    }//GEN-LAST:event_discountFieldKeyPressed

    private void taxFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taxFieldKeyPressed
        // TODO add your handling code here:
        String tax = taxField.getText();
        char c = evt.getKeyChar();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9' || evt.getKeyChar() == '.') {
            taxField.setEditable(true);
        } else {
            if (evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE) {
                taxField.setEditable(true);
            } else {
                taxField.setEditable(false);
            }
        }
    }//GEN-LAST:event_taxFieldKeyPressed

    private void amountFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountFieldKeyPressed
        // TODO add your handling code here:
        amountField.setEditable(false);
    }//GEN-LAST:event_amountFieldKeyPressed

    private void itemCountFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCountFieldKeyPressed
        // TODO add your handling code here:
        itemCountField.setEditable(false);
    }//GEN-LAST:event_itemCountFieldKeyPressed

    private void totalDiscountFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalDiscountFieldKeyPressed
        // TODO add your handling code here:
        totalDiscountField.setEditable(false);
    }//GEN-LAST:event_totalDiscountFieldKeyPressed

    private void totalTaxFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalTaxFieldKeyPressed
        // TODO add your handling code here:
        totalTaxField.setEditable(false);
    }//GEN-LAST:event_totalTaxFieldKeyPressed

    private void totalAmountFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalAmountFieldKeyPressed
        // TODO add your handling code here:
        totalAmountField.setEditable(false);
    }//GEN-LAST:event_totalAmountFieldKeyPressed

    private void netAmountFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_netAmountFieldKeyPressed
        // TODO add your handling code here:
        netAmountField.setEditable(false);
    }//GEN-LAST:event_netAmountFieldKeyPressed

    private void invoiceNoFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceNoFieldKeyReleased
        // TODO add your handling code here:
        invoiceNoField.setEditable(true);
    }//GEN-LAST:event_invoiceNoFieldKeyReleased

    private void invoiceDateChooserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_invoiceDateChooserKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceDateChooserKeyReleased

    private void customerNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerNameFieldKeyReleased
        // TODO add your handling code here:
        customerNameField.setEditable(true);
    }//GEN-LAST:event_customerNameFieldKeyReleased

    private void stockNoFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stockNoFieldKeyReleased
        // TODO add your handling code here:
        stockNoField.setEditable(true);
    }//GEN-LAST:event_stockNoFieldKeyReleased

    private void productNoFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNoFieldKeyReleased
        // TODO add your handling code here:
        productNoField.setEditable(true);
    }//GEN-LAST:event_productNoFieldKeyReleased

    private void productNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productNameFieldKeyReleased
        // TODO add your handling code here:
        productNameField.setEditable(true);
    }//GEN-LAST:event_productNameFieldKeyReleased

    private void qtyFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyFieldKeyReleased
        // TODO add your handling code here:
        qtyField.setEditable(true);
        calculateValues();
    }//GEN-LAST:event_qtyFieldKeyReleased

    private void unitNameFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unitNameFieldKeyReleased
        // TODO add your handling code here:
        unitNameField.setEditable(true);
    }//GEN-LAST:event_unitNameFieldKeyReleased

    private void unitSellPriceFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unitSellPriceFieldKeyReleased
        // TODO add your handling code here:
        unitSellPriceField.setEditable(true);
        calculateValues();
    }//GEN-LAST:event_unitSellPriceFieldKeyReleased

    private void discountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountFieldKeyReleased
        // TODO add your handling code here:
        discountField.setEditable(true);
        calculateValues();
    }//GEN-LAST:event_discountFieldKeyReleased

    private void taxFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taxFieldKeyReleased
        // TODO add your handling code here:
        taxField.setEditable(true);
        calculateValues();
    }//GEN-LAST:event_taxFieldKeyReleased

    private void amountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountFieldKeyReleased
        // TODO add your handling code here:
        amountField.setEditable(true);
    }//GEN-LAST:event_amountFieldKeyReleased

    private void itemCountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCountFieldKeyReleased
        // TODO add your handling code here:
        itemCountField.setEditable(true);
    }//GEN-LAST:event_itemCountFieldKeyReleased

    private void totalDiscountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalDiscountFieldKeyReleased
        // TODO add your handling code here:
        totalDiscountField.setEditable(true);
    }//GEN-LAST:event_totalDiscountFieldKeyReleased

    private void totalTaxFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalTaxFieldKeyReleased
        // TODO add your handling code here:
        totalTaxField.setEditable(true);
    }//GEN-LAST:event_totalTaxFieldKeyReleased

    private void totalAmountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalAmountFieldKeyReleased
        // TODO add your handling code here:
        totalAmountField.setEditable(true);
    }//GEN-LAST:event_totalAmountFieldKeyReleased

    private void netAmountFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_netAmountFieldKeyReleased
        // TODO add your handling code here:
        netAmountField.setEditable(true);
    }//GEN-LAST:event_netAmountFieldKeyReleased

    private void qtyFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_qtyFieldFocusLost
        // TODO add your handling code here:
        String qty = qtyField.getText();
        String stockNo = stockNoField.getText();
        double availableStockQty = salesModel.getAvailableStockQty(stockNo);

        String PATTERN = "^[0-9]{0,100}[.][0-9]{0,100}$";
        Pattern p = Pattern.compile(PATTERN);
        Matcher m = p.matcher(qty);
        if (qty.equals("")) {
            qtyField.setText("0.0");
        } else if (!m.matches()) {
            qtyField.setText(qty + ".0");
        }

        if (Double.parseDouble(qty) > availableStockQty) {
            JOptionPane.showConfirmDialog(rootPane, String.valueOf(availableStockQty) + " of quantity available only", "Warning", -1, 1);
            qtyField.setText(String.valueOf(availableStockQty));
        }
        calculateValues();
    }//GEN-LAST:event_qtyFieldFocusLost

    private void unitSellPriceFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_unitSellPriceFieldFocusLost
        // TODO add your handling code here:
        String unitSellPrice = unitSellPriceField.getText();
        String PATTERN = "^[0-9]{0,100}[.][0-9]{0,100}$";
        Pattern p = Pattern.compile(PATTERN);
        Matcher m = p.matcher(unitSellPrice);
        if (unitSellPrice.equals("")) {
            unitSellPriceField.setText("0.0");
        } else if (!m.matches()) {
            unitSellPriceField.setText(unitSellPrice + ".0");
        }
        calculateValues();
    }//GEN-LAST:event_unitSellPriceFieldFocusLost

    private void discountFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_discountFieldFocusLost
        // TODO add your handling code here:
        String discount = discountField.getText();
        String PATTERN = "^[0-9]{0,100}[.][0-9]{0,100}$";
        Pattern p = Pattern.compile(PATTERN);
        Matcher m = p.matcher(discount);
        System.out.println(m.matches());
        if (discount.equals("")) {
            discountField.setText("0.0");
        } else if (!m.matches()) {
            discountField.setText(discount + ".0");
        }
        calculateValues();
    }//GEN-LAST:event_discountFieldFocusLost

    private void taxFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_taxFieldFocusLost
        // TODO add your handling code here:
        String tax = taxField.getText();
        String PATTERN = "^[0-9]{0,100}[.][0-9]{0,100}$";
        Pattern p = Pattern.compile(PATTERN);
        Matcher m = p.matcher(tax);
        System.out.println(m.matches());
        if (tax.equals("")) {
            taxField.setText("0.0");
        } else if (!m.matches()) {
            taxField.setText(tax + ".0");
        }
        calculateValues();
    }//GEN-LAST:event_taxFieldFocusLost

    private void keywordFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFocusGained
        // TODO add your handling code here:
        if (keywordField.getText().equals("Search")) {
            keywordField.setText("");
            keywordField.setForeground(new Color(0, 0, 0));
        }
    }//GEN-LAST:event_keywordFieldFocusGained

    private void keywordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_keywordFieldFocusLost
        // TODO add your handling code here:
        if (keywordField.getText().equals("")) {
            keywordField.setText("Search");
            keywordField.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_keywordFieldFocusLost

    private void keywordFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keywordFieldKeyReleased
        // TODO add your handling code here:
        String keyword = keywordField.getText();
        logger.debug("Search invoice data");
        loadInvoiceHistoryTable(keyword);
    }//GEN-LAST:event_keywordFieldKeyReleased

    private void invoiceButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceButton1ActionPerformed
        // TODO add your handling code here:
        int rowCount = invoiceHistoryTable.getRowCount();
        int selectedRow = invoiceHistoryTable.getSelectedRow();
        int selectedRowCount = invoiceHistoryTable.getSelectedRowCount();

        if (selectedRowCount == 1) {
            int invoiceNo = (int) invoiceHistoryTableModel.getValueAt(selectedRow, 0);
            new GenerateInvoiceDialog(this, true, invoiceNo).setVisible(true);
        } else {
            if (rowCount == 0) {
                JOptionPane.showConfirmDialog(rootPane, "Table is Empty !", "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: Table is Empty !");
            } else {
                JOptionPane.showConfirmDialog(rootPane, "Please Select Any Single Row !", "Error", -1, JOptionPane.ERROR_MESSAGE);
                logger.error("Error: Please Select Any Single Row !");
            }
        }
    }//GEN-LAST:event_invoiceButton1ActionPerformed

    private void invoiceNoLoad() {
        int invoiceNo = salesModel.getInvoiceNo();
        invoiceNo++;
        invoiceNoField.setText(new String(invoiceNo + ""));
        logger.debug("Set Invoice No");
    }

    private void calculateValues() {
        try {
            int rowCount = invoiceTableModel.getRowCount();

            double productQty = Double.parseDouble(qtyField.getText());
            double productUnitsellPrice = Double.parseDouble(unitSellPriceField.getText());
            double productDiscount = Double.parseDouble(discountField.getText());
            double productTax = Double.parseDouble(taxField.getText());
            double productAmount = (productUnitsellPrice - productDiscount + productTax) * productQty;

            amountField.setText(String.valueOf(productAmount));

            itemCountField.setText(String.valueOf(rowCount));

            double totalDiscount = 0;
            double totalTax = 0;
            double totalAmount = 0;

            for (int i = 0; i < rowCount; i++) {
                double rowQty = (double) invoiceTableModel.getValueAt(i, 3);

                double rowDiscount = (double) invoiceTableModel.getValueAt(i, 6);
                totalDiscount += rowDiscount * rowQty;

                double rowVat = (double) invoiceTableModel.getValueAt(i, 7);
                totalTax += rowVat * rowQty;

                double rowAmount = (double) invoiceTableModel.getValueAt(i, 8);
                totalAmount += rowAmount;
            }
            totalDiscountField.setText(String.valueOf(totalDiscount));
            totalTaxField.setText(String.valueOf(totalTax));
            totalAmountField.setText(String.valueOf(totalAmount));
            netAmountField.setText(String.valueOf(totalAmount));

            logger.debug("Calculate values");
        } catch (NumberFormatException e) {
            logger.error("Exception: " + e.getMessage());
        }
    }

    private void clearFields() {
        stockNoField.setText("Select Stock");
        productNoField.setText("0");
        productNameField.setText("");
        qtyField.setText("0.0");
        unitNameField.setText("Number");
        unitSellPriceField.setText("0.0");
        discountField.setText("0.0");
        taxField.setText("0.0");
        amountField.setText("0.0");

        addRowButton.setEnabled(true);
        updateRowButton.setEnabled(false);
        deleteRowButton.setEnabled(false);

        logger.debug("Clear fields");
    }

    private void loadInvoiceHistoryTable(String keyword) {
        salesModel.loadInvoiceHistoryTable(keyword, invoiceHistoryTableModel);
        logger.debug("Load invoice history table");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatIntelliJLaf());
            UIManager.put("Table.showHorizontalLines", true);
            UIManager.put("Table.showVerticalLines", true);
            UIManager.put("ScrollBar.showButtons", true);
            UIManager.put("ScrollBar.width", 16);
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Windows".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GrnManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GrnManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GrnManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GrnManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRowButton;
    private javax.swing.JTextField amountField;
    private javax.swing.JButton clearFiledsButton;
    private javax.swing.JTextField customerNameField;
    private javax.swing.JButton deleteRowButton;
    private javax.swing.JTextField discountField;
    private javax.swing.JButton invoiceButton;
    private javax.swing.JButton invoiceButton1;
    private com.toedter.calendar.JDateChooser invoiceDateChooser;
    private javax.swing.JTable invoiceHistoryTable;
    private javax.swing.JTextField invoiceNoField;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JTextField itemCountField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField keywordField;
    private javax.swing.JTextField netAmountField;
    private javax.swing.JButton newGrnButton;
    private javax.swing.JTextField productNameField;
    private javax.swing.JTextField productNoField;
    private javax.swing.JTextField qtyField;
    private javax.swing.JButton saveInvoiceButton;
    private javax.swing.JTextField stockNoField;
    private javax.swing.JTextField taxField;
    private javax.swing.JTextField totalAmountField;
    private javax.swing.JTextField totalDiscountField;
    private javax.swing.JTextField totalTaxField;
    private javax.swing.JTextField unitNameField;
    private javax.swing.JTextField unitSellPriceField;
    private javax.swing.JButton updateRowButton;
    // End of variables declaration//GEN-END:variables
}
